vendor_name = ModelSim
source_file = 1, C:/intelFPGA_lite/18.1/ALU/seven_segments.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/Shifter.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/ShiftBit.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/Shift.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/register.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/alu_module_tb.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/N_BIT_ADDER.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/alu_module.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/ALU_TEST.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/A2_complement.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/A2_complement_aux.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/display_results.sv
source_file = 1, C:/intelFPGA_lite/18.1/ALU/db/alu_module.cbx.xml
design_name = display_results
instance = comp, \result[0]~output , result[0]~output, display_results, 1
instance = comp, \result[1]~output , result[1]~output, display_results, 1
instance = comp, \result[2]~output , result[2]~output, display_results, 1
instance = comp, \result[3]~output , result[3]~output, display_results, 1
instance = comp, \segments[0]~output , segments[0]~output, display_results, 1
instance = comp, \segments[1]~output , segments[1]~output, display_results, 1
instance = comp, \segments[2]~output , segments[2]~output, display_results, 1
instance = comp, \segments[3]~output , segments[3]~output, display_results, 1
instance = comp, \segments[4]~output , segments[4]~output, display_results, 1
instance = comp, \segments[5]~output , segments[5]~output, display_results, 1
instance = comp, \segments[6]~output , segments[6]~output, display_results, 1
instance = comp, \carryOut~output , carryOut~output, display_results, 1
instance = comp, \overflow~output , overflow~output, display_results, 1
instance = comp, \carryF~output , carryF~output, display_results, 1
instance = comp, \negative~output , negative~output, display_results, 1
instance = comp, \zero~output , zero~output, display_results, 1
instance = comp, \a[2]~input , a[2]~input, display_results, 1
instance = comp, \a[0]~input , a[0]~input, display_results, 1
instance = comp, \sel[3]~input , sel[3]~input, display_results, 1
instance = comp, \sel[2]~input , sel[2]~input, display_results, 1
instance = comp, \ALU3|Mux4~1 , ALU3|Mux4~1, display_results, 1
instance = comp, \sel[1]~input , sel[1]~input, display_results, 1
instance = comp, \ALU3|shifter_flag[1] , ALU3|shifter_flag[1], display_results, 1
instance = comp, \ALU3|sll|sb_0|generate_shift_registers[1].sb|WideOr0~0 , ALU3|sll|sb_0|generate_shift_registers[1].sb|WideOr0~0, display_results, 1
instance = comp, \b[2]~input , b[2]~input, display_results, 1
instance = comp, \sel[0]~input , sel[0]~input, display_results, 1
instance = comp, \ALU3|shifter_flag[0] , ALU3|shifter_flag[0], display_results, 1
instance = comp, \b[1]~input , b[1]~input, display_results, 1
instance = comp, \b[0]~input , b[0]~input, display_results, 1
instance = comp, \ALU3|sll|sb_0|sb_N|WideOr0~0 , ALU3|sll|sb_0|sb_N|WideOr0~0, display_results, 1
instance = comp, \ALU3|sll|generate_shift_registers[1].sb|WideOr0~0 , ALU3|sll|generate_shift_registers[1].sb|WideOr0~0, display_results, 1
instance = comp, \a[1]~input , a[1]~input, display_results, 1
instance = comp, \ALU3|sll|sb_0|WideOr0 , ALU3|sll|sb_0|WideOr0, display_results, 1
instance = comp, \ALU3|sll|generate_shift_registers[1].sb|generate_shift_registers[1].sb|WideOr0~0 , ALU3|sll|generate_shift_registers[1].sb|generate_shift_registers[1].sb|WideOr0~0, display_results, 1
instance = comp, \ALU3|Mux4~0 , ALU3|Mux4~0, display_results, 1
instance = comp, \ALU3|Mux4~3 , ALU3|Mux4~3, display_results, 1
instance = comp, \ALU3|Mux4~4 , ALU3|Mux4~4, display_results, 1
instance = comp, \ALU3|sll|sb_N|WideOr0~0 , ALU3|sll|sb_N|WideOr0~0, display_results, 1
instance = comp, \ALU3|Mux4~2 , ALU3|Mux4~2, display_results, 1
instance = comp, \ALU3|Mux4~5 , ALU3|Mux4~5, display_results, 1
instance = comp, \ALU3|Mux7~0 , ALU3|Mux7~0, display_results, 1
instance = comp, \ALU3|Alu_Out[0] , ALU3|Alu_Out[0], display_results, 1
instance = comp, \ALU3|Mux5~0 , ALU3|Mux5~0, display_results, 1
instance = comp, \ALU3|Mux5~1 , ALU3|Mux5~1, display_results, 1
instance = comp, \ALU3|sll|sb_0|sb_N|WideOr0~1 , ALU3|sll|sb_0|sb_N|WideOr0~1, display_results, 1
instance = comp, \ALU3|sll|sb_0|generate_shift_registers[1].sb|WideOr0~1 , ALU3|sll|sb_0|generate_shift_registers[1].sb|WideOr0~1, display_results, 1
instance = comp, \ALU3|sll|sb_N|generate_shift_registers[1].sb|WideOr0~0 , ALU3|sll|sb_N|generate_shift_registers[1].sb|WideOr0~0, display_results, 1
instance = comp, \ALU3|WideOr0~0 , ALU3|WideOr0~0, display_results, 1
instance = comp, \ALU3|adder_flag , ALU3|adder_flag, display_results, 1
instance = comp, \ALU3|adder|GENERATE_N_BIT_ADDER[1].full_adder1|xorAnswer2 , ALU3|adder|GENERATE_N_BIT_ADDER[1].full_adder1|xorAnswer2, display_results, 1
instance = comp, \ALU3|Mux5~2 , ALU3|Mux5~2, display_results, 1
instance = comp, \ALU3|Mux5~3 , ALU3|Mux5~3, display_results, 1
instance = comp, \ALU3|Alu_Out[1] , ALU3|Alu_Out[1], display_results, 1
instance = comp, \ALU3|sll|sb_N|sb_N|WideOr0~0 , ALU3|sll|sb_N|sb_N|WideOr0~0, display_results, 1
instance = comp, \ALU3|adder|GENERATE_N_BIT_ADDER[1].full_adder1|or2 , ALU3|adder|GENERATE_N_BIT_ADDER[1].full_adder1|or2, display_results, 1
instance = comp, \ALU3|adder|GENERATE_N_BIT_ADDER[2].full_adder1|xorAnswer2 , ALU3|adder|GENERATE_N_BIT_ADDER[2].full_adder1|xorAnswer2, display_results, 1
instance = comp, \ALU3|Mux6~0 , ALU3|Mux6~0, display_results, 1
instance = comp, \ALU3|Mux6~1 , ALU3|Mux6~1, display_results, 1
instance = comp, \ALU3|Alu_Out[2] , ALU3|Alu_Out[2], display_results, 1
instance = comp, \testSegments|WideOr6~0 , testSegments|WideOr6~0, display_results, 1
instance = comp, \testSegments|WideOr5~0 , testSegments|WideOr5~0, display_results, 1
instance = comp, \testSegments|Decoder0~0 , testSegments|Decoder0~0, display_results, 1
instance = comp, \testSegments|WideOr3~0 , testSegments|WideOr3~0, display_results, 1
instance = comp, \testSegments|WideOr2~0 , testSegments|WideOr2~0, display_results, 1
instance = comp, \testSegments|WideOr1~0 , testSegments|WideOr1~0, display_results, 1
instance = comp, \testSegments|WideOr0~0 , testSegments|WideOr0~0, display_results, 1
instance = comp, \ALU3|adder|GENERATE_N_BIT_ADDER[2].full_adder1|or2 , ALU3|adder|GENERATE_N_BIT_ADDER[2].full_adder1|or2, display_results, 1
instance = comp, \a[3]~input , a[3]~input, display_results, 1
instance = comp, \b[3]~input , b[3]~input, display_results, 1
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, display_results, 1
